= render :partial => "profile_common"

= content_for :sidebar do
  -# Followers
  = render_cell :users, :followers, :followed => @user

  -# Followed users
  = render_cell :users, :following, :follower => @user

  -# Followed topics
  = render_cell :topics, :small_list, :user => @user

- content_for :subtabs do
  - tabs_tag :namespace => :users_show, :open_tabs => {:class => :tabs} do |tab|
    = tab.news_updates t('users.show.tab.news_updates'), user_path(@user)
    - questions_count = @user.questions.count
    = tab.questions "#{t('users.show.tab.questions')} (#{questions_count})", questions_user_path(@user)
    - answers_count = @user.answers.count
    = tab.answers "#{t('users.show.tab.answers')} (#{answers_count})", answers_user_path(@user)
    - links_count = @user.external_search_results.count
    = tab.search_results "#{t('users.show.tab.search_results')} (#{links_count})", search_results_user_path(@user)

#users_show
  - case @tab
  - when "news_updates"
    - partial = "news_update"
  - when "questions"
    - partial = "questions/question"
  - when "answers"
    - partial = "answers/answer"
  - when "search_results"
    - partial = "search_results/search_result"
  .block
    - if @items.empty?
      = t("users.show.no_#{@tab}")
    - else
      - if @order_info[:will_sort]
        - sort = @order_info[:sort]
        = render :partial => "list_order", :locals => @order_info
      - else
        - sort = "newest"
      %ul.items{:id => @tab}
        - @items.each do |item|
          = render :partial => partial, :object => item
      .additional_info
        = will_paginate @items, :param_name => "page"
        .clear
